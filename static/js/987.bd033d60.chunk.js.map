{"version":3,"file":"static/js/987.bd033d60.chunk.js","mappings":"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","sources":["api.js","components/Loader/Loader.jsx","components/MovieInfo/MovieCast/MovieCast.styled.js","components/MovieInfo/MovieCast/MovieCast.jsx","pages/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrandingMovie = async () => {\n  const params = new URLSearchParams({\n    api_key: 'eb0eb7c0094eafcd73993969787d7a4b',\n  });\n  const resp = await axios.get(`/trending/movie/week?${params}`);\n  return resp.data;\n};\n\nexport const searchMovies = async searchQuery => {\n  const params = new URLSearchParams({\n    api_key: 'eb0eb7c0094eafcd73993969787d7a4b',\n    query: `${searchQuery}`,\n  });\n  const resp = await axios.get(`/search/movie?${params}`);\n  return resp.data;\n};\nexport const fetchMovieDetail = async movieId => {\n  const params = new URLSearchParams({\n    api_key: 'eb0eb7c0094eafcd73993969787d7a4b',\n  });\n  const resp = await axios.get(`movie/${movieId}?${params}`);\n  return resp.data;\n};\nexport const fetchMovieReviews = async movieId => {\n  const params = new URLSearchParams({\n    api_key: 'eb0eb7c0094eafcd73993969787d7a4b',\n  });\n  const resp = await axios.get(`movie/${movieId}/reviews?${params}`);\n  return resp.data;\n};\nexport const fetchMovieCast = async movieId => {\n  const params = new URLSearchParams({\n    api_key: 'eb0eb7c0094eafcd73993969787d7a4b',\n  });\n  const resp = await axios.get(`movie/${movieId}/credits?${params}`);\n  return resp.data;\n};\n","import { ThreeDots } from 'react-loader-spinner';\n\nexport const Loader = ({ isLoading }) => {\n  return (\n    <ThreeDots\n      height=\"80\"\n      width=\"80\"\n      radius=\"9\"\n      color=\"#3f51b5\"\n      ariaLabel=\"three-dots-loading\"\n      wrapperStyle={{ justifyContent: 'space-around' }}\n      wrapperClassName=\"\"\n      visible={isLoading}\n    />\n  );\n};","import styled from 'styled-components';\n\nexport const WrapperCast = styled.ul`\n  display: flex;\n  gap: 16px;\n  flex-wrap: wrap;\n`;\nexport const ActorCard = styled.li`\n  width: 290px;\n  display: flex;\n  gap: 16px;\n`;\nexport const ImageWrap = styled.div`\n  width: 90px;\n  border-radius: 10px;\n  overflow: hidden;\n`;\nexport const InfoWrap = styled.div`\n  padding: 10px 2px;\n`;\nexport const Image = styled.img`\n  object-fit: cover;\n  display: block;\n  height: 100%;\n  width: 100%;\n`;\n","import { ActorCard, Image, ImageWrap, InfoWrap, WrapperCast } from './MovieCast.styled';\n\nexport const MovieCast = ({ cast }) => {\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n  return (\n    <>\n      {cast.length > 0 && (\n        <WrapperCast>\n          {cast.map(({ id, name, profile_path, character }) => (\n            <ActorCard key={id}>\n              <ImageWrap>\n                <Image\n                  src={\n                    profile_path\n                      ? 'https://image.tmdb.org/t/p/w300' + profile_path\n                      : defaultImg\n                  }\n                  alt={name}\n                  height='100%'\n                />\n              </ImageWrap>\n              <InfoWrap>\n                <h4>{name}</h4>\n                <p>{character}</p>\n              </InfoWrap>\n            </ActorCard>\n          ))}\n        </WrapperCast>\n      )}\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from 'api';\nimport Notiflix from 'notiflix';\nimport { MovieCast } from 'components/MovieInfo/MovieCast/MovieCast';\nimport { Loader } from 'components/Loader/Loader';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n\n  const [cast, setCast] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    async function getMovieCast(movieId) {\n      try {\n        setLoading(true);\n        const resp = await fetchMovieCast(movieId);\n        if (!resp) {\n          Notiflix.Notify.failure(`Nothing was found for this query\"`);\n        }\n        const mainCast = resp.cast.filter((element, index) => {\n         return index < 8;\n        });\n        setCast(mainCast);\n      } catch (error) {\n        Notiflix.Report.failure(\n          `${error.message}`,\n          'Something went wrong, please try reloading this page',\n          'Ok',\n          {\n            titleMaxLength: 50,\n          }\n        );\n      } finally {\n        setLoading(false);\n      }\n    }\n    if (!movieId) return;\n    getMovieCast(movieId);\n  }, [movieId]);\n\n  return (\n    <>\n      {cast && <MovieCast cast={cast} />}\n      <Loader isLoading={loading} />\n    </>\n  );\n}\n"],"names":["axios","fetchTrandingMovie","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","params","resp","_context","prev","next","URLSearchParams","api_key","concat","sent","abrupt","data","stop","apply","arguments","searchMovies","_ref2","_callee2","searchQuery","_context2","query","_x","fetchMovieDetail","_ref3","_callee3","movieId","_context3","_x2","fetchMovieReviews","_ref4","_callee4","_context4","_x3","fetchMovieCast","_ref5","_callee5","_context5","_x4","Loader","isLoading","_jsx","ThreeDots","height","width","radius","color","ariaLabel","wrapperStyle","justifyContent","wrapperClassName","visible","WrapperCast","styled","_templateObject","_taggedTemplateLiteral","ActorCard","_templateObject2","ImageWrap","_templateObject3","InfoWrap","_templateObject4","Image","_templateObject5","MovieCast","cast","_Fragment","children","length","map","id","name","profile_path","character","_jsxs","src","alt","Cast","useParams","_useState","useState","_useState2","_slicedToArray","setCast","_useState3","_useState4","loading","setLoading","useEffect","_getMovieCast","mainCast","Notiflix","filter","element","index","t0","message","titleMaxLength","finish","getMovieCast"],"sourceRoot":""}